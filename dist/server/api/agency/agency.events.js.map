{"version":3,"sources":["../../../../server/api/agency/agency.events.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAEA;;AACA,IAAI,SAAS,QAAQ,aAAR,EAAuB,MAApC;AACA,IAAI,eAAe,0BAAnB;;;AAGA,aAAa,eAAb,CAA6B,CAA7B;;;AAGA,IAAI,SAAS;AACX,iBAAe,MADJ;AAEX,iBAAe,MAFJ;AAGX,kBAAgB;AAHL,CAAb;;;AAOA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,SAAO,IAAP,CAAY,CAAZ,EAAe,UAAU,KAAV,CAAf;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAS,GAAT,EAAc,OAAd,EAAuB,IAAvB,EAA6B;AAClC,iBAAa,IAAb,CAAkB,QAAQ,GAAR,GAAc,IAAI,GAApC,EAAyC,GAAzC;AACA,iBAAa,IAAb,CAAkB,KAAlB,EAAyB,GAAzB;AACA,SAAK,IAAL;AACD,GAJD;AAKD;;kBAEc,Y","file":"agency.events.js","sourcesContent":["/**\n * Agency model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar Agency = require('../../sqldb').Agency;\nvar AgencyEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nAgencyEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'afterCreate': 'save',\n  'afterUpdate': 'save',\n  'afterDestroy': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  Agency.hook(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc, options, done) {\n    AgencyEvents.emit(event + ':' + doc._id, doc);\n    AgencyEvents.emit(event, doc);\n    done(null);\n  }\n}\n\nexport default AgencyEvents;\n"]}