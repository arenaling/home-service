{"version":3,"sources":["../../../../server/api/agency/agency.integration.js"],"names":[],"mappings":"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","file":"agency.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newAgency;\n\ndescribe('Agency API:', function() {\n\n  describe('GET /api/agencies', function() {\n    var agencys;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/agencies')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          agencys = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      expect(agencys).to.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/agencies', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/agencies')\n        .send({\n          name: 'New Agency',\n          info: 'This is the brand new agency!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newAgency = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created agency', function() {\n      expect(newAgency.name).to.equal('New Agency');\n      expect(newAgency.info).to.equal('This is the brand new agency!!!');\n    });\n\n  });\n\n  describe('GET /api/agencies/:id', function() {\n    var agency;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/agencies/' + newAgency._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          agency = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      agency = {};\n    });\n\n    it('should respond with the requested agency', function() {\n      expect(agency.name).to.equal('New Agency');\n      expect(agency.info).to.equal('This is the brand new agency!!!');\n    });\n\n  });\n\n  describe('PUT /api/agencies/:id', function() {\n    var updatedAgency;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/agencies/' + newAgency._id)\n        .send({\n          name: 'Updated Agency',\n          info: 'This is the updated agency!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedAgency = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedAgency = {};\n    });\n\n    it('should respond with the updated agency', function() {\n      expect(updatedAgency.name).to.equal('Updated Agency');\n      expect(updatedAgency.info).to.equal('This is the updated agency!!!');\n    });\n\n  });\n\n  describe('DELETE /api/agencies/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/agencies/' + newAgency._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when agency does not exist', function(done) {\n      request(app)\n        .delete('/api/agencies/' + newAgency._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}