{"version":3,"sources":["../../../../server/api/agency/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAjB;;AAEA,IAAI,iBAAiB;AACnB,SAAO,kBADY;AAEnB,QAAM,iBAFa;AAGnB,UAAQ,mBAHW;AAInB,UAAQ,mBAJW;AAKnB,WAAS;AALU,CAArB;;AAQA,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EADU;AAEf,OAAK,MAAM,GAAN,EAFU;AAGf,SAAO,MAAM,GAAN,EAHQ;AAIf,QAAM,MAAM,GAAN,EAJS;AAKf,UAAQ,MAAM,GAAN;AALO,CAAjB;;AAQA;AACA,IAAI,cAAc,WAAW,YAAX,EAAyB;AACzC,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP;AACD;AAHQ,GAD8B;AAMzC,yBAAuB;AANkB,CAAzB,CAAlB;;AASA,SAAS,oBAAT,EAA+B,YAAW;;AAExC,KAAG,0CAAH,EAA+C,YAAW;AACxD,WAAO,WAAP,EAAoB,EAApB,CAAuB,KAAvB,CAA6B,UAA7B;AACD,GAFD;;AAIA,WAAS,mBAAT,EAA8B,YAAW;;AAEvC,OAAG,yCAAH,EAA8C,YAAW;AACvD,aAAO,WAAW,GAAX,CACJ,QADI,CACK,GADL,EACU,kBADV,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,uBAAT,EAAkC,YAAW;;AAE3C,OAAG,wCAAH,EAA6C,YAAW;AACtD,aAAO,WAAW,GAAX,CACJ,QADI,CACK,MADL,EACa,iBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,oBAAT,EAA+B,YAAW;;AAExC,OAAG,0CAAH,EAA+C,YAAW;AACxD,aAAO,WAAW,IAAX,CACJ,QADI,CACK,GADL,EACU,mBADV,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,uBAAT,EAAkC,YAAW;;AAE3C,OAAG,0CAAH,EAA+C,YAAW;AACxD,aAAO,WAAW,GAAX,CACJ,QADI,CACK,MADL,EACa,mBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,yBAAT,EAAoC,YAAW;;AAE7C,OAAG,0CAAH,EAA+C,YAAW;AACxD,aAAO,WAAW,KAAX,CACJ,QADI,CACK,MADL,EACa,mBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,0BAAT,EAAqC,YAAW;;AAE9C,OAAG,2CAAH,EAAgD,YAAW;AACzD,aAAO,WAAW,MAAX,CACJ,QADI,CACK,MADL,EACa,oBADb,CAAP,EAEI,EAFJ,CAEO,IAFP,CAEY,IAFZ,CAEiB,UAFjB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar agencyCtrlStub = {\n  index: 'agencyCtrl.index',\n  show: 'agencyCtrl.show',\n  create: 'agencyCtrl.create',\n  update: 'agencyCtrl.update',\n  destroy: 'agencyCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar agencyIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './agency.controller': agencyCtrlStub\n});\n\ndescribe('Agency API Router:', function() {\n\n  it('should return an express router instance', function() {\n    expect(agencyIndex).to.equal(routerStub);\n  });\n\n  describe('GET /api/agencies', function() {\n\n    it('should route to agency.controller.index', function() {\n      expect(routerStub.get\n        .withArgs('/', 'agencyCtrl.index')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/agencies/:id', function() {\n\n    it('should route to agency.controller.show', function() {\n      expect(routerStub.get\n        .withArgs('/:id', 'agencyCtrl.show')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/agencies', function() {\n\n    it('should route to agency.controller.create', function() {\n      expect(routerStub.post\n        .withArgs('/', 'agencyCtrl.create')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/agencies/:id', function() {\n\n    it('should route to agency.controller.update', function() {\n      expect(routerStub.put\n        .withArgs('/:id', 'agencyCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/agencies/:id', function() {\n\n    it('should route to agency.controller.update', function() {\n      expect(routerStub.patch\n        .withArgs('/:id', 'agencyCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/agencies/:id', function() {\n\n    it('should route to agency.controller.destroy', function() {\n      expect(routerStub.delete\n        .withArgs('/:id', 'agencyCtrl.destroy')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}