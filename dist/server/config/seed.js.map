{"version":3,"sources":["../../../server/config/seed.js"],"names":[],"mappings":";;;;;AAKA;;AACA;;;;;;AACA,IAAI,QAAQ,gBAAM,KAAlB;AACA,IAAI,OAAO,gBAAM,IAAjB;;AAEA,MAAM,IAAN,GACG,IADH,CACQ,YAAM;AACV,SAAO,MAAM,OAAN,CAAc,EAAE,OAAO,EAAT,EAAd,CAAP;AACD,CAHH,EAIG,IAJH,CAIQ,YAAM;AACV,QAAM,UAAN,CAAiB,CAAC;AAChB,UAAM,mBADU;AAEhB,UAAM,wEACC,+DADD,GAEC;AAJS,GAAD,EAKd;AACD,UAAM,+BADL;AAED,UAAM,4DACC;AAHN,GALc,EASd;AACD,UAAM,oBADL;AAED,UAAM,6DACC,2DADD,GAEC;AAJN,GATc,EAcd;AACD,UAAM,mBADL;AAED,UAAM,+DACC;AAHN,GAdc,EAkBd;AACD,UAAM,iBADL;AAED,UAAM,kEACC,gEADD,GAEC;AAJN,GAlBc,EAuBd;AACD,UAAM,kBADL;AAED,UAAM,mEACC;AAHN,GAvBc,CAAjB;AA4BD,CAjCH;;AAmCA,KAAK,IAAL","file":"seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\nimport sqldb from '../sqldb';\nvar Thing = sqldb.Thing;\nvar User = sqldb.User;\n\nThing.sync()\n  .then(() => {\n    return Thing.destroy({ where: {} });\n  })\n  .then(() => {\n    Thing.bulkCreate([{\n      name: 'Development Tools',\n      info: 'Integration with popular tools such as Bower, Grunt, Babel, Karma, ' +\n             'Mocha, JSHint, Node Inspector, Livereload, Protractor, Jade, ' +\n             'Stylus, Sass, and Less.'\n    }, {\n      name: 'Server and Client integration',\n      info: 'Built with a powerful and fun stack: MongoDB, Express, ' +\n             'AngularJS, and Node.'\n    }, {\n      name: 'Smart Build System',\n      info: 'Build system ignores `spec` files, allowing you to keep ' +\n             'tests alongside code. Automatic injection of scripts and ' +\n             'styles into your index.html'\n    }, {\n      name: 'Modular Structure',\n      info: 'Best practice client and server structures allow for more ' +\n             'code reusability and maximum scalability'\n    }, {\n      name: 'Optimized Build',\n      info: 'Build process packs up your templates as a single JavaScript ' +\n             'payload, minifies your scripts/css/images, and rewrites asset ' +\n             'names for caching.'\n    }, {\n      name: 'Deployment Ready',\n      info: 'Easily deploy your app to Heroku or Openshift with the heroku ' +\n             'and openshift subgenerators'\n    }]);\n  });\n\nUser.sync();\n  // .then(() => User.destroy({ where: {} }))\n  // .then(() => {\n    // User.bulkCreate([{\n    //   provider: 'local',\n    //   role: 'admin',\n    //   name: 'Admin',\n    //   email: 'endahpus@gmail.com',\n    //   password: 'asdf1234'\n    // }])\n    // .then(() => {\n    //   console.log('finished populating users');\n    // });\n  // });\n"]}